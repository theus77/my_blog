{
    "blocks": "[{\"id\":\"24d2d5a3-b9b8-48cb-bb8a-bb4c418b84cf\",\"label\":\"Example\",\"type\":\"paragraph\",\"object\":{\"label\":\"Example\",\"body\":\"<p>Here is a schema:</p>\\r\\n\\r\\n<p><a href=\\\"ems://asset:57127174353ffbc1b93e444784ae2ff41d3b256d?name=rect.drawio&amp;type=application/octet-stream\\\">Empty rectangle</a></p>\\r\\n\\r\\n<p>And another one:</p>\\r\\n\\r\\n<p><a href=\\\"ems://asset:9f76fe1e24af1496ebccda8ba7f1a27be003cf5b?name=elasticms-aws-greenshift.drawio&amp;type=application/octet-stream\\\">AWS Schema</a></p>\"},\"children\":[]},{\"id\":\"4db9c721-7437-4d3e-b92c-77fdf9da6dec\",\"label\":\"javascript\",\"type\":\"doc\",\"object\":{\"label\":\"javascript\",\"body\":\"```javascript\\r\\nfunction drawioPreviewer() {\\r\\n    const drawioDocuments = document.querySelectorAll('a[href$=\\\".drawio\\\"]');\\r\\n    let loaded = 0;\\r\\n\\r\\n    [].forEach.call(drawioDocuments, function (doc) {\\r\\n        const xhttp = new XMLHttpRequest();\\r\\n        xhttp.open(\\\"GET\\\", doc.href, true);\\r\\n        xhttp.send();\\r\\n\\r\\n        xhttp.onload = function (e) {\\r\\n            const config = {\\r\\n                highlight: \\\"#0000ff\\\",\\r\\n                nav: true,\\r\\n                resize: true,\\r\\n                toolbar: \\\"zoom layers lightbox\\\",\\r\\n                xml: xhttp.responseText\\r\\n            };\\r\\n            const div = document.createElement('div');\\r\\n            div.setAttribute('class', 'mxgraph');\\r\\n            div.dataset.mxgraph = JSON.stringify(config);\\r\\n            doc.parentNode.replaceChild(div, doc);\\r\\n            ++loaded;\\r\\n\\r\\n            if (loaded < drawioDocuments.length) {\\r\\n                return;\\r\\n            }\\r\\n\\r\\n            const script = document.createElement('script');\\r\\n            script.setAttribute('type', 'text/javascript');\\r\\n            script.setAttribute('src', '//viewer.diagrams.net/js/viewer-static.min.js');\\r\\n            document.body.appendChild(script);\\r\\n\\r\\n        };\\r\\n\\r\\n    })\\r\\n}\\r\\n\\r\\nexport {drawioPreviewer};\\r\\n```\"},\"children\":[]}]",
    "description": "Test to show drawio on a web site (from a simple link)",
    "label": "2021-12-06 draw.io on a website",
    "locale": "en",
    "path": "2021-12-06-draw.io-on-a-website",
    "published_date": "2021-12-06T16:09:26+01:00",
    "search": [
        "Example",
        "Here is a schema:\r\n\r\nEmpty rectangle\r\n\r\nAnd another one:\r\n\r\nAWS Schema",
        "javascript",
        "```javascript\r\nfunction drawioPreviewer() {\r\n    const drawioDocuments = document.querySelectorAll('a[href$=\".drawio\"]');\r\n    let loaded = 0;\r\n\r\n    [].forEach.call(drawioDocuments, function (doc) {\r\n        const xhttp = new XMLHttpRequest();\r\n        xhttp.open(\"GET\", doc.href, true);\r\n        xhttp.send();\r\n\r\n        xhttp.onload = function (e) {\r\n            const config = {\r\n                highlight: \"#0000ff\",\r\n                nav: true,\r\n                resize: true,\r\n                toolbar: \"zoom layers lightbox\",\r\n                xml: xhttp.responseText\r\n            };\r\n            const div = document.createElement('div');\r\n            div.setAttribute('class', 'mxgraph');\r\n            div.dataset.mxgraph = JSON.stringify(config);\r\n            doc.parentNode.replaceChild(div, doc);\r\n            ++loaded;\r\n\r\n            if (loaded < drawioDocuments.length) {\r\n                return;\r\n            }\r\n\r\n            const script = document.createElement('script');\r\n            script.setAttribute('type', 'text/javascript');\r\n            script.setAttribute('src', '//viewer.diagrams.net/js/viewer-static.min.js');\r\n            document.body.appendChild(script);\r\n\r\n        };\r\n\r\n    })\r\n}\r\n\r\nexport {drawioPreviewer};\r\n```"
    ],
    "template": "blog",
    "title": "Draw.io on a website"
}