{
    "blocks": "[{\"id\":\"bbe5e4ab-749e-4f45-825e-cc97a34cfdbf\",\"label\":\"Context\",\"type\":\"paragraph\",\"object\":{\"label\":\"Context\",\"body\":\"<p>I was working on the elasticms core bundle, at a moment in time&nbsp;I needed to a new common helper function. A couple of&nbsp;minute later the function was there, the common&#39;s&nbsp;PR ready to be reviewed and I came back to my initial core&#39;s PR.</p>\\r\\n\\r\\n<p>The think is that the core doesn&#39;t have a direct dependency to the common bundle. It depends on the client helper bundle. Which client helper bundle depends on the common bundle.</p>\"}},{\"id\":\"0cfb3747-cff1-4072-bc0d-37535a01167e\",\"label\":\"Core bundle dependencies\",\"type\":\"doc\",\"object\":{\"label\":\"Core bundle dependencies\",\"body\":\"The core bundle depends on client helper bundle via this rule:\\r\\n\\r\\n```json\\r\\n    ...\\r\\n    \\\"elasticms/client-helper-bundle\\\": \\\"^3.6\\\",\\r\\n    ...\\r\\n```\\r\\n\\r\\nIf we check in the Client Helper bundle dependencies we find this rule:\\r\\n\\r\\n```json\\r\\n    ...\\r\\n    \\\"elasticms/common-bundle\\\": \\\"~1.8.0\\\",\\r\\n    ...\\r\\n```\\r\\n\\r\\nIf I add a dependency to a branch in the core's `composer.json` file, like this:\\r\\n\\r\\n```json\\r\\n    ...\\r\\n    \\\"elasticms/client-helper-bundle\\\": \\\"^3.6\\\",\\r\\n    \\\"elasticms/common-bundle\\\": \\\"dev-feat/command-get-array\\\",\\r\\n    ...\\r\\n```\\r\\n\\r\\nAt `composer update` I face this problem:\\r\\n\\r\\n```bash\\r\\nUpdating dependencies\\r\\nYour requirements could not be resolved to an installable set of packages.\\r\\n\\r\\n  Problem 1\\r\\n    - elasticms/client-helper-bundle[3.6.0, ..., 3.7.9] require elasticms/common-bundle ~1.8.0 -> found elasticms/common-bundle[1.8.0, ..., 1.8.81] but it conflicts with your root composer.json require (dev-feat/command-get-array).\\r\\n    - Root composer.json requires elasticms/client-helper-bundle ^3.6 -> satisfiable by elasticms/client-helper-bundle[3.6.0, ..., 3.7.9].\\r\\n```\"}},{\"id\":\"bb363a57-4d4f-460b-b7a8-741dae397bdb\",\"label\":\"Solution\",\"type\":\"doc\",\"object\":{\"label\":\"Solution\",\"body\":\"The idea is to add a dependency directly to the common bundle in the core bundle's `composer.json` file. \\r\\nBut use a composer trick to make that branch acting like a released version of the common bundle:\\r\\n\\r\\n```json\\r\\n    ...\\r\\n    \\\"elasticms/client-helper-bundle\\\": \\\"^3.6\\\",\\r\\n    \\\"elasticms/common-bundle\\\": \\\"dev-feat/command-get-array as 1.8.81\\\",\\r\\n    ...\\r\\n```\\r\\n\\r\\nYou can now run composer update.\"}}]",
    "description": "Resolve composer conflicts when you want to use a branch acting as a released version",
    "label": "2021-09-04 Composer - Use a branch acting as a released version",
    "locale": "en",
    "path": "2021-09-04/composer/resolve-conflits-with-branch-as-release",
    "published_date": "2021-09-04T14:24:39+02:00",
    "search": [
        "Context",
        "I was working on the elasticms core bundle, at a moment in time&nbsp;I needed to a new common helper function. A couple of&nbsp;minute later the function was there, the common&#39;s&nbsp;PR ready to be reviewed and I came back to my initial core&#39;s PR.\r\n\r\nThe think is that the core doesn&#39;t have a direct dependency to the common bundle. It depends on the client helper bundle. Which client helper bundle depends on the common bundle.",
        "Core bundle dependencies",
        "The core bundle depends on client helper bundle via this rule:\r\n\r\n```json\r\n    ...\r\n    \"elasticms/client-helper-bundle\": \"^3.6\",\r\n    ...\r\n```\r\n\r\nIf we check in the Client Helper bundle dependencies we find this rule:\r\n\r\n```json\r\n    ...\r\n    \"elasticms/common-bundle\": \"~1.8.0\",\r\n    ...\r\n```\r\n\r\nIf I add a dependency to a branch in the core's `composer.json` file, like this:\r\n\r\n```json\r\n    ...\r\n    \"elasticms/client-helper-bundle\": \"^3.6\",\r\n    \"elasticms/common-bundle\": \"dev-feat/command-get-array\",\r\n    ...\r\n```\r\n\r\nAt `composer update` I face this problem:\r\n\r\n```bash\r\nUpdating dependencies\r\nYour requirements could not be resolved to an installable set of packages.\r\n\r\n  Problem 1\r\n    - elasticms/client-helper-bundle[3.6.0, ..., 3.7.9] require elasticms/common-bundle ~1.8.0 -> found elasticms/common-bundle[1.8.0, ..., 1.8.81] but it conflicts with your root composer.json require (dev-feat/command-get-array).\r\n    - Root composer.json requires elasticms/client-helper-bundle ^3.6 -> satisfiable by elasticms/client-helper-bundle[3.6.0, ..., 3.7.9].\r\n```",
        "Solution",
        "The idea is to add a dependency directly to the common bundle in the core bundle's `composer.json` file. \r\nBut use a composer trick to make that branch acting like a released version of the common bundle:\r\n\r\n```json\r\n    ...\r\n    \"elasticms/client-helper-bundle\": \"^3.6\",\r\n    \"elasticms/common-bundle\": \"dev-feat/command-get-array as 1.8.81\",\r\n    ...\r\n```\r\n\r\nYou can now run composer update."
    ],
    "template": "blog",
    "title": "Composer: How to use a specific branch acting like a specific revision in composer dependencies"
}